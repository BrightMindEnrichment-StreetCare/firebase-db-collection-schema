{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InteractionLog",
  "description": "Schema for a document in the 'InteractionLog' collection. Each document represents a single interaction or visit.",
  "type": "object",
  "properties": {
    "userId": {
      "type": "string",
      "description": "The document ID from the 'users' collection for the user who created this log."
    },
    "outreachId": {
      "type": ["string", "null"],
      "description": "The ID of the outreach event this log is associated with (for future use)."
    },
    "firstName": {
      "type": "string",
      "description": "The first name of the person who volunteeted."
    },
    "lastName": {
      "type": "string",
      "description": "The last name of the person who volunteeted (for internal use only, not public)."
    },
    "email": {
      "type": "string",
      "format": "email",
      "description": "The email address of the person who volunteeted."
    },
    "phoneNumber": {
      "type": "string",
      "description": "The 10-digit phone number without any formatting of the person who volunteered.",
      "pattern": "^[0-9]{10}$"
    },
    "interactionDate":{
      "type": "string",
      "format": "date",
      "description": "The day/date of the interaction"
    },
    "startTimestamp": {
      "type": "string",
      "format": "timestamp",
      "description": "The combined start date and time of the interaction. Represents a Firestore Timestamp. Use interactionDate for the date."
    },
    "endTimestamp": {
      "type": "string",
      "format": "timestamp",
      "description": "The combined end date and time of the interaction. Represents a Firestore Timestamp. Use interactionDate for the date."
    },
    "listOfSupportsProvided": {
      "type": "array",
      "description": "A list of support categories that were provided during the interaction.",
      "items": {
        "type": "string"
      }
    },
    "numPeopleHelped": {
      "type": "integer",
      "description": "The total number of people helped during this interaction.",
      "minimum": 0
    },
    "carePackagesDistributed": {
      "type": "integer",
      "description": "The number of care packages that were given out.",
      "minimum": 0
    },
    "carePackageContents": {
      "type": "array",
      "description": "A list of items that were included in the distributed care packages.",
      "items": {
        "type": "string"
      }
    },
    "numPeopleJoined": {
      "type": "integer",
      "description": "The number of other volunteers or team members who joined in this interaction.",
      "minimum": 0
    },
    "addr1": {
      "type": "string",
      "description": "Street address line 1."
    },
    "addr2": {
      "type": ["string", "null"],
      "description": "Street address line 2 (optional)."
    },
    "city": {
      "type": "string"
    },
    "state": {
      "type": "string"
    },
    "zipcode": {
      "type": "string",
      "pattern": "^[0-9]{5}$"
    },
    "country": {
      "type": "string",
      "default": "USA"
    },
    "helpRequestCount": {
      "type": "integer",
      "description": "The number of new help requests that were created as a result of this interaction.",
      "minimum": 0
    },
    "helpRequestDocIds": {
      "type": "array",
      "description": "A list of document IDs from the 'HelpRequest' collection that are linked to this log.",
      "items": {
        "type": "string"
      }
    },
    "isPublic": {
      "type": "boolean",
      "description": "Determines if this record should be made public, read from the form's consent checkmark.",
      "default": "true"
    },
    "status": {
      "type": "string",
      "description": "Denotes the current status of approval for the interaction log.",
      "default": "Pending"
    },
    "lastModifiedTimestamp": {
      "type": "string",
      "format": "timestamp",
      "description": "The last modified time stamp, it should be updated with current timestamp when status changes or the log is edited.",
      "default": null
    },
    "lastActionPerformed": {
      "type": "string",
      "description": "ToDo: define what actions are to be considered to track, that aren't tracked by status. Eg: Edited, Re-edited.",
      "default": null
    }
  }
}
